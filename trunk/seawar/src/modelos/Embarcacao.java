package modelos;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @Seawar
//  @ File Name : Embarcacao.java
//  @ Date : @06/05/2011
//  @ Author : @Fernando
//
//




public class Embarcacao {
	private Celula[] aListaCelulas;
	private String sNomeEmbarcacao;
	private int iValorEmbarcacao;
	private int tamanho;
	private boolean bNaufragado;
	private boolean bVertical;
	
	public Embarcacao(int tamanho) {
		bVertical = false;
		this.tamanho = tamanho;
		aListaCelulas = new Celula[tamanho];
		gerarCelulas();
	}
	public Embarcacao(int tamanho, boolean vertical){
		bVertical = vertical;
		gerarCelulas();
	}
	public Celula[] getListaCelulas() {
		return aListaCelulas;
	}
	
	public void setListaCelulas(Celula[] celulas) {
		aListaCelulas = celulas;
	}
	
	public String getNomeEmbarcacao() {
		return sNomeEmbarcacao;
	}
	
	public void setNomeEmbarcacao(String nomeEmbarcacao) {
		sNomeEmbarcacao = nomeEmbarcacao;
	}
	
	public int getValorEmbarcacao() {
		return iValorEmbarcacao;
	}
	
	public void setValorEmbarcacao(int valorEmbarcacao) {
		iValorEmbarcacao = valorEmbarcacao * aListaCelulas.length;
	}
	
	public boolean getNaufragado() {
		return bNaufragado;
	}
	
	public void setNaufragado(boolean naufragado) {
		bNaufragado = naufragado;
	}

	public int getTamanho() {
		return tamanho;
	}
	public boolean estaVertical() {
		return bVertical;
	}
	public Celula getCelulaAtacada(Celula celula) {
		Celula objRetorno = null;
		for(int i = 0; i < aListaCelulas.length; i++){
			Celula celulaBarco = aListaCelulas[i];
			if(celulaBarco != null && celula.x == celulaBarco.x && celula.y == celulaBarco.y){
				objRetorno = celulaBarco;
			}
		}
		return objRetorno;
	}

	public void setVertical(boolean makeVertical) {
		bVertical = makeVertical;
		ordenarCelulas();
	}

	private void ordenarCelulas() {
		//Pega a primeira celula da embarcacao para referencia
		Celula celulaAnterior = aListaCelulas[0];
		//Reordena as proximas de acordo
		for(int i = 1; i < aListaCelulas.length; i++){
			Celula celulaAtual = aListaCelulas[i];
			
			//Coloca a próxima célula na posição adequada
			if(bVertical){
				celulaAtual.setLocation(celulaAnterior.x, celulaAnterior.y+1);
			}
			else{
				celulaAtual.setLocation(celulaAnterior.x+1, celulaAnterior.y);
			}
			//Troca a celula de referencia para a proxima celula do loop
			celulaAnterior = celulaAtual;
		}		
	}
	
	//Gera as celulas da embarcação
	private void gerarCelulas() {
		for(int i = 0; i < tamanho; i++){
			Celula celula = new Celula();
			celula.setTipoCelula(TipoCelula.Embarcacao);
			aListaCelulas[i] = celula; 
		}
		//Após gerar, ordena-as
		ordenarCelulas();
	}
	public void setPosicao(int posx, int posy) {
		//Pega a primeira celula da embarcacao para referencia
		Celula celulaInicial = aListaCelulas[0];
		celulaInicial.setLocation(posx, posy);
		ordenarCelulas();
	}
	public boolean contemCelula(int x, int y) {
		for(int i = 0; i < aListaCelulas.length; i++){
			if(aListaCelulas[i].x == x && aListaCelulas[i].y == y){
				return true;
			}
		}
		//retorna falso se a embarcação não ocupar a celula do ponto(x,y)
		return false;
	}
}
