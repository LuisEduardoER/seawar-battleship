//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @Seawar
//  @ File Name : Tabuleiro.java
//  @ Date : @06/05/2011
//  @ Author : @Fernando
//
//



//Classe relacionada ao Tabuleiro do Jogo.
public class Tabuleiro {
	public Celula[][] mMatrizCelula;
	public Celula[][] mCelulasAtacadas;
	public boolean bTravaTabuleiro;
	public boolean bTurno;
	public Jogador oJogador;
	public Embarcacao[] arrEmbarcacoes;
	
	private final int QUANTIDADE_EMBARCACOES_POSSIVEIS = 7; 
	
	public Tabuleiro(int tamanho){
		mMatrizCelula = new Celula[tamanho][tamanho];
		mCelulasAtacadas = new Celula[tamanho][tamanho];
		arrEmbarcacoes = new Embarcacao[QUANTIDADE_EMBARCACOES_POSSIVEIS];
	}
	public Celula[][] getMatrizCelula() {
		return mMatrizCelula;
	}

	public void setMatrizCelula(Celula[][] mMatrizCelula) {
		this.mMatrizCelula = mMatrizCelula;
	}

	public Celula[][] getCelulasAtacadas() {
		return mCelulasAtacadas;
	}

	public void setCelulasAtacadas(Celula[][] mCelulasAtacadas) {
		this.mCelulasAtacadas = mCelulasAtacadas;
	}

	public boolean isTravaTabuleiro() {
		return bTravaTabuleiro;
	}

	public void setTravaTabuleiro(boolean bTravaTabuleiro) {
		this.bTravaTabuleiro = bTravaTabuleiro;
	}

	public boolean isTurno() {
		return bTurno;
	}

	public void setTurno(boolean bTurno) {
		this.bTurno = bTurno;
	}

	public Jogador getoJogador() {
		return oJogador;
	}

	public void setoJogador(Jogador oJogador) {
		this.oJogador = oJogador;
	}

	public Embarcacao[] getArrEmbarcacoes() {
		return arrEmbarcacoes;
	}

	public void setArrEmbarcacoes(Embarcacao[] arrEmbarcacoes) {
		this.arrEmbarcacoes = arrEmbarcacoes;
	}

	public boolean seTabuleiroTravado(Jogador jogador) {
		return jogador.getTabuleiroAtaque().isTravaTabuleiro();
	}
	
	public boolean seCelulaAtacada(Celula celula) {
		Celula obj = mCelulasAtacadas[celula.x][celula.y];
		if(obj != null)
		{
			//Celula celulaDefesa = mMatrizCelula[celula.x][celula.y];
			//return celulaDefesa.aTipoCelula != TipoCelula.AreaLivre; 
			return obj.aTipoCelula != TipoCelula.AreaLivre;
		}
		return  false;
	}
	
	public Celula encontrarCelula(int x, int y) {
			Celula objCelula = mMatrizCelula[x][y];
			return objCelula;
	}
	
	public Celula atacar(int x, int y){
		Celula celAtacada = encontrarCelula(x,y);
		mCelulasAtacadas[x][y] = celAtacada;
		
		switch(celAtacada.getTipoCelula())
		{
		case Agua:
			celAtacada.aTipoCelula = TipoCelula.Agua;
			break;
		case AreaLivre:
			celAtacada.aTipoCelula = TipoCelula.Agua;
			break;
		case Embarcacao:
			acertarEmbarcacao(celAtacada);
			break;
		}
		 
		return celAtacada;
	}
	private void acertarEmbarcacao(Celula celula) {
		// TODO Implementar com o código correto e refatorado
		for(int i = 0; i < arrEmbarcacoes.length; i++){
			Embarcacao barco = arrEmbarcacoes[i];
			Celula parteBarco = barco.getCelulaAtacada(celula);
			if(parteBarco != null){
				// TODO Fazer a lógica para quando um barco é acertado
			}
		}
	}
	
	public void ajustarEmbarcacoes(){
		for(int i = 0; i < arrEmbarcacoes.length; i++){
			Embarcacao barco = arrEmbarcacoes[i];
			barco.setVertical(i % 2 == 0);
			if(barco != null){
				Celula[] celulasBarco = barco.getListaCelulas();
				for(int j = 0; j < celulasBarco.length; j++){
					Celula celula = celulasBarco[j];
					mMatrizCelula[celula.x][celula.y] = celula;
				}				
			}
		}
	}
}
